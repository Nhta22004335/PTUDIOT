<?php
    include "config.php";
    try {
        $conn = connectDatabase();
        $sql = "SELECT idcb, id, tencb, trangthai, thoigian, anh FROM cambien";
        $stmt = $conn->prepare($sql);
        $stmt->execute();
        $results = $stmt->fetchAll();
    } catch (PDOException $e) {
        echo "Query failed: " . $e->getMessage();
    } finally {
        $conn = null;
    }
?>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.1.min.js"></script>
    <link rel="stylesheet" href="fontawesome/css/all.min.css">
    <link rel="stylesheet" href="theodoi.css?v=<?= time(); ?>">
    <title>Theo d√µi</title>
</head>
<body>
    <!-- N√∫t chu√¥ng th√¥ng b√°o -->
    <div id="nutchuong" onclick="toggleThongBao()">
        <i class="fas fa-bell"></i>
        <span id="notification-count" class="notification-count">0</span>
    </div>
    <!-- H·ªôp th√¥ng b√°o -->
    <div id="thongbao-container">
        <h4>üîî Th√¥ng b√°o t·ª´ c√°c c·∫£m bi·∫øn</h4>
        <div id="thongbao-noidung">
            <p>Kh√¥ng c√≥ c·∫£nh b√°o n√†o.</p>
        </div>
    </div>
    <!-- N·ªôi dung hi·ªÉn th·ªã -->
    <h2>D·ªØ li·ªáu c·∫£m bi·∫øn th·ªùi gian th·ª±c</h2>
    <div id="main-content">
        <div class="sensor-container">
            <?php foreach ($results as $row) { ?>
                <div class="sensor-card">
                    <img src="<?= $row['anh'] ?>" class="icon" alt="sensor icon">
                    <div class="sensor-label"><?= $row['tencb'] ?></div>
                    <input type="text" name="<?= $row['idcb'] ?>" disabled placeholder="Value" id="<?=$row['id']?>">
                </div>
            <?php } ?>
        </div>
        <!-- N√∫t Tr·ªü v·ªÅ -->
        <div id="back-button-container">
            <button onclick="troVe()" id="btn-trove"><i class="fas fa-arrow-left"></i>Tr·ªü v·ªÅ</button>
        </div>
    </div>
</body>
</html>
<script>
    // Tr·ªü v·ªÅ
    function troVe() {
        window.location.href = "trangchunguoidung.php";
    }

    // Kh·ªüi t·∫°o client MQTT
    const client = new Paho.MQTT.Client("broker.emqx.io", 8083, "clientId_22004335");

    // G√°n s·ª± ki·ªán
    client.onConnectionLost = onConnectionLost;
    client.onMessageArrived = onMessageArrived;

    // K·∫øt n·ªëi ƒë·∫øn MQTT broker v·ªõi x·ª≠ l√Ω l·ªói
    client.connect({
        onSuccess: onConnect,
        onFailure: function (error) {
            console.error("K·∫øt n·ªëi MQTT th·∫•t b·∫°i: " + error.errorMessage);
        }
    });

    // Khi k·∫øt n·ªëi th√†nh c√¥ng
    function onConnect() {
        console.log("K·∫øt n·ªëi th√†nh c√¥ng!");
        client.subscribe("Nta_22004335_gui", {
            onSuccess: function () {
                console.log("ƒê√£ subscribe th√†nh c√¥ng!");
            },
            onFailure: function (error) {
                console.error("L·ªói khi subscribe: " + error.errorMessage);
            }
        });
    }

    // Khi m·∫•t k·∫øt n·ªëi
    function onConnectionLost(responseObject) {
        if (responseObject.errorCode !== 0) {
            console.error("M·∫•t k·∫øt n·ªëi: " + responseObject.errorMessage);
        }
    }

    // Khi nh·∫≠n ƒë∆∞·ª£c tin nh·∫Øn t·ª´ MQTT
    function onMessageArrived(message) {
        console.log("D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c: " + message.payloadString);
        try {
            const dht = JSON.parse(message.payloadString);
            // Ki·ªÉm tra v√† c·∫≠p nh·∫≠t d·ªØ li·ªáu v√†o input n·∫øu t·ªìn t·∫°i
            updateValue("nd", dht.temperature);
            updateValue("da", dht.humidity);
            updateValue("as", dht.anhsang);
            updateValue("ndkhi", dht.nongdokhi);
            updateValue("dad", dht.doamdat);
            updateValue("sieuam", dht.sieuam);
        } catch (error) {
            console.error("L·ªói khi x·ª≠ l√Ω d·ªØ li·ªáu MQTT: " + error.message);
        }
    }

    // H√†m ki·ªÉm tra ph·∫ßn t·ª≠ DOM v√† c·∫≠p nh·∫≠t gi√° tr·ªã
    function updateValue(elementId, value) {
        const element = document.getElementById(elementId);
        if (element) {
            element.value = value;
        } else {
            console.warn(`Ph·∫ßn t·ª≠ #${elementId} kh√¥ng t·ªìn t·∫°i!`);
        }
    }

    let notificationCount = 0; // Bi·∫øn l∆∞u s·ªë l∆∞·ª£ng th√¥ng b√°o

    // B·∫•m v√†o n√∫t chu√¥ng s·∫Ω hi·ªÉn th·ªã h·ªôp tho·∫°i t√¥ng b√°o
    function toggleThongBao() {
        const container = document.getElementById("thongbao-container");
        const battat = document.getElementById("nutchuong");
        const mainContent = document.getElementById("main-content");
        const trove = document.getElementById("back-button-container");
        if (container.style.display === "none" || container.style.display === "") {
            container.style.display = "block";
            battat.style.display = "none";
            mainContent.style.marginRight = "27vw"; 
            trove.style.marginLeft = "27vw";
            battat.classList.remove("ring"); 
            notificationCount = 0;
            document.getElementById("notification-count").textContent = notificationCount;
             // üëâ Cu·ªôn ƒë·∫øn cu·ªëi n·ªôi dung th√¥ng b√°o
            container.scrollTop = container.scrollHeight;
        } else {
            container.style.display = "none";
            battat.style.display = "block";
            mainContent.style.marginRight = "0";

        }
    }

    // Khi click ra ph√≠a ngo√†i kh·ªèi h·ªôp tho·∫°i th√¨ th√¥ng b√°o s·∫Ω ·∫©n jk
    document.addEventListener("click", function(event) {
        const thongBao = document.getElementById("thongbao-container");
        const nutChuong = document.getElementById("nutchuong");
        const trove = document.getElementById("back-button-container");
        if (!thongBao.contains(event.target) && !nutChuong.contains(event.target)) {
            thongBao.style.display = "none";
            nutChuong.style.display = "flex";
            document.getElementById("main-content").style.marginRight = "0";
            trove.style.marginLeft = "0";
            trove.style.width = "100%";
            trove.style.display = "flex";
            trove.style.justifyContent = "center"; /* CƒÉn gi·ªØa n√∫t */
        }
    });

    // C·∫≠p nh·∫≠t th√¥ng b√°o v√†o ph·∫ßn t·ª≠ th√¥ng b√°o
    function themThongBao(noidung) {
        const container = document.getElementById("thongbao-noidung");

        // X√≥a th√¥ng b√°o m·∫∑c ƒë·ªãnh n·∫øu c√≥
        if (container.children.length === 1 && container.children[0].innerText === "Kh√¥ng c√≥ c·∫£nh b√°o n√†o.") {
            container.innerHTML = "";
        }
        // T·∫°o ph·∫ßn t·ª≠ m·ªõi
        const p = document.createElement("p");
        p.textContent = noidung;

        // Th√™m v√†o ƒë·∫ßu danh s√°ch
        container.insertBefore(p, container.firstChild);
        notificationCount++;
        document.getElementById("notification-count").textContent = notificationCount;
        if (notificationCount!=0) {
            const battat = document.getElementById("nutchuong");
            battat.classList.add("ring"); 
        } else {
            const battat = document.getElementById("nutchuong");
            battat.classList.remove("ring"); 
        }
    }


function kiemTraVaThongBao() {
    const sensorValues = {
        temp: parseFloat(document.getElementById("nd")?.value || 0),
        humi: parseFloat(document.getElementById("da")?.value || 0),
        anhsang: parseFloat(document.getElementById("as")?.value || 0),
        nongdokhi: parseFloat(document.getElementById("ndkhi")?.value || 0),
        doamdat: parseFloat(document.getElementById("dad")?.value || 0),
        sieuam: parseFloat(document.getElementById("sieuam")?.value || 0)
    };
    // NHI·ªÜT ƒê·ªò V√Ä ƒê·ªò ·∫®M
    if (sensorValues.temp < 18 && sensorValues.humi < 50) {
        themThongBao("‚ùÑÔ∏è‚ö†Ô∏è Nhi·ªát ƒë·ªô th·∫•p v√† ƒë·ªô ·∫©m th·∫•p - c√¢y c√≥ th·ªÉ ph√°t tri·ªÉn ch·∫≠m, c·∫ßn gi·ªØ ·∫•m v√† tƒÉng ƒë·ªô ·∫©m.");
    } else if (sensorValues.temp < 18 && sensorValues.humi > 75) {
        themThongBao("‚ùÑÔ∏èüíß Nhi·ªát ƒë·ªô th·∫•p v√† ƒë·ªô ·∫©m cao - d·ªÖ sinh n·∫•m b·ªánh, c·∫ßn th√¥ng gi√≥.");
    } else if (sensorValues.temp > 30 && sensorValues.humi < 50) {
        themThongBao("üî•üí¶ Nhi·ªát ƒë·ªô cao v√† ƒë·ªô ·∫©m th·∫•p - nguy c∆° h√©o c√¢y, c·∫ßn t∆∞·ªõi v√† l√†m m√°t.");
    } else if (sensorValues.temp > 30 && sensorValues.humi > 75) {
        themThongBao("üî•üíß Nhi·ªát ƒë·ªô cao v√† ƒë·ªô ·∫©m cao - d·ªÖ th·ªëi r·ªÖ, n√™n gi·∫£m ƒë·ªô ·∫©m ho·∫∑c th√¥ng gi√≥.");
    } else if (sensorValues.temp >= 20 && sensorValues.temp <= 30 && sensorValues.humi >= 50 && sensorValues.humi <= 75) {
        themThongBao("‚úÖ ƒêi·ªÅu ki·ªán l√Ω t∆∞·ªüng - c√¢y c√≥i sinh tr∆∞·ªüng t·ªët.");
    } else {
        if (sensorValues.temp < 18) {
            themThongBao("‚ùÑÔ∏è C·∫£nh b√°o: Nhi·ªát ƒë·ªô th·∫•p.");
        } else if (sensorValues.temp > 30) {
            themThongBao("üå°Ô∏è C·∫£nh b√°o: Nhi·ªát ƒë·ªô cao.");
        }
        if (sensorValues.humi < 50) {
            themThongBao("üíß C·∫£nh b√°o: ƒê·ªô ·∫©m th·∫•p.");
        } else if (sensorValues.humi > 75) {
            themThongBao("üíß C·∫£nh b√°o: ƒê·ªô ·∫©m cao.");
        }
    }

    // √ÅNH S√ÅNG 
    if (sensorValues.anhsang > 900) {
        themThongBao("‚ö†Ô∏èC·∫ßn chi·∫øu s√°ng g·∫•p!")
    } else
        if (sensorValues.anhsang > 700 && sensorValues.anhsang < 900) {
            themThongBao("‚ö†Ô∏èC·∫ßn chi·∫øu s√°ng th√™m!")
        }
        else
        if (sensorValues.anhsang > 400 && sensorValues.anhsang < 700) {
            themThongBao("M·ª©c ƒë·ªô s√°ng cao!")
        }

    // N·ªíNG ƒê·ªò KH√ç CO, CH4, KH√ìI
    if (sensorValues.nongdoco2 < 200) {
        themThongBao("Kh√¥ng kh√≠ s·∫°ch!");
    } else
        if (sensorValues.nongdoco2 > 200 && sensorValues.nongdoco2 < 400) 
            themThongBao("C√≥ m·ªôt ch√∫t kh√≠ gas, CO, kh√≥i nh·∫π!");
        else
            if (sensorValues.nongdoco2 > 400 && sensorValues.nongdoco2 < 600) 
                themThongBao("Kh√≠ gas, CO, kh√≥i ƒëang ·ªü m·ª©c trung b√¨nh!");
            else
                themThongBao("C√≥ th·ªÉ r√≤ r·ªâ gas, CO n·∫∑ng ho·∫∑c ch√°y");

    //ƒê∆∞ D·ªò ·∫®M ƒê·∫§T
    if (sensorValues.doamdat < 300) {
        themThongBao("‚ö†Ô∏è ƒê·∫•t qu√° ∆∞·ªõt!");
    } else
        if (sensorValues.doamdat > 300 && sensorValues.doamdat < 500) 
            themThongBao("ƒê·ªô ·∫©m t·ªët!");
        else
            if (sensorValues.doamdat > 500 && sensorValues.doamdat < 700)
            themThongBao("ƒê·∫•t h∆°i kh√¥!");
        else
            themThongBao("ƒê·∫•t kh√¥!");

    // SI√äU √ÇM - ƒêO MUCEJ N∆Ø·ªöC TRONG B·ªÇ
    if (sensorValues.sieuam < 450) {
        themThongBao("M·ª±c n∆∞·ªõc ƒë√£ ƒë·∫ßy!");
    } else
        if (sensorValues.sieuam < 100)
            themThongBao("S·∫Øp c·∫°n n∆∞·ªõc!");
        else
            if (sensorValues.sieuam < 30) themThongBao("B√°o kh·∫©n! C·∫°n n∆∞·ªõc!");
}
setInterval(kiemTraVaThongBao, 120000);

// TH√äM V√ÄO CSDL 
function updateSensorValues() {
        const inputs = document.querySelectorAll("input");
        let data = [];

        inputs.forEach(input => {
            data.push({
                idcb: input.name,
                value: input.value
            });
        });

        $.ajax({
            url: "capnhatnkcambien.php",
            method: "POST",
            data: { sensors: JSON.stringify(data) },
            success: function(response) {
                console.log("C·∫≠p nh·∫≠t th√†nh c√¥ng:", response);
            },
            error: function(xhr, status, error) {
                console.error("L·ªói khi c·∫≠p nh·∫≠t:", error);
            }
        });
    }
    //setInterval(updateSensorValues, 120000);
</script>
